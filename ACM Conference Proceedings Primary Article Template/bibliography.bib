@article{kitchenham2004procedures,
  title={Procedures for performing systematic reviews},
  author={Kitchenham, Barbara},
  journal={Keele, UK, Keele University},
  volume={33},
  number={2004},
  pages={1--26},
  year={2004},
  publisher={Citeseer}
}

@article{lu2021eagle,
  title={Eagle: CFL-reachability-based precision-preserving acceleration of object-sensitive pointer analysis with partial context sensitivity},
  author={Lu, Jingbo and He, Dongjie and Xue, Jingling},
  journal={ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume={30},
  number={4},
  pages={1--46},
  year={2021},
  publisher={ACM New York, NY, USA}
}

@phdthesis{lu2020precision,
  title={Precision-Preserving Acceleration of Object-Sensitive Pointer Analysis with CFL-Reachability},
  author={Lu, Jingbo},
  year={2020},
  school={UNSW Sydney}
}

// Taint Analysis 

@article{arzt2014flowdroid,
  title={Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps},
  author={Arzt, Steven and Rasthofer, Siegfried and Fritz, Christian and Bodden, Eric and Bartel, Alexandre and Klein, Jacques and Le Traon, Yves and Octeau, Damien and McDaniel, Patrick},
  journal={ACM sigplan notices},
  volume={49},
  number={6},
  pages={259--269},
  year={2014},
  publisher={ACM New York, NY, USA}
}

@inproceedings{huang2015scalable,
  title={Scalable and precise taint analysis for android},
  author={Huang, Wei and Dong, Yao and Milanova, Ana and Dolby, Julian},
  booktitle={Proceedings of the 2015 International Symposium on Software Testing and Analysis},
  pages={106--117},
  year={2015}
}

@inproceedings{lerch2014flowtwist,
  title={FlowTwist: efficient context-sensitive inside-out taint analysis for large codebases},
  author={Lerch, Johannes and Hermann, Ben and Bodden, Eric and Mezini, Mira},
  booktitle={Proceedings of the 22nd ACM SIGSOFT international symposium on foundations of software engineering},
  pages={98--108},
  year={2014}
}

@article{tripp2009taj,
  title={TAJ: effective taint analysis of web applications},
  author={Tripp, Omer and Pistoia, Marco and Fink, Stephen J and Sridharan, Manu and Weisman, Omri},
  journal={ACM Sigplan Notices},
  volume={44},
  number={6},
  pages={87--97},
  year={2009},
  publisher={ACM New York, NY, USA}
}

// Buffer overflow

@article{bufferoverflow,
  title={Improving security using extensible lightweight static analysis},
  author={Evans, David and Larochelle, David},
  journal={IEEE software},
  volume={19},
  number={1},
  pages={42--51},
  year={2002},
  publisher={IEEE}
}

@inproceedings{xie2003archer,
  title={Archer: using symbolic, path-sensitive analysis to detect memory access errors},
  author={Xie, Yichen and Chou, Andy and Engler, Dawson},
  booktitle={Proceedings of the 9th European software engineering conference held jointly with 11th ACM SIGSOFT international symposium on Foundations of software engineering},
  pages={327--336},
  year={2003}
}

@inproceedings{le2008marple,
  title={Marple: a demand-driven path-sensitive buffer overflow detector},
  author={Le, Wei and Soffa, Mary Lou},
  booktitle={Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering},
  pages={272--282},
  year={2008}
}

// Resource Leak Analysis

@inproceedings{weimer2004finding,
  title={Finding and preventing run-time error handling mistakes},
  author={Weimer, Westley and Necula, George C},
  booktitle={Proceedings of the 19th annual ACM SIGPLAN Conference on Object-oriented programming, systems, languages, and applications},
  pages={419--431},
  year={2004}
}

// Loop optimization, loop unrolling

@book{muchnick1997advanced,
  title={Advanced compiler design implementation},
  author={Muchnick, Steven},
  year={1997},
  publisher={Morgan kaufmann}
}

// Escape analysis
@article{choi1999escape,
  title={Escape analysis for Java},
  author={Choi, Jong-Deok and Gupta, Manish and Serrano, Mauricio and Sreedhar, Vugranam C and Midkiff, Sam},
  journal={Acm Sigplan Notices},
  volume={34},
  number={10},
  pages={1--19},
  year={1999},
  publisher={ACM New York, NY, USA}
}

// Deadcode elimination

@article{knoop1994partial,
  title={Partial dead code elimination},
  author={Knoop, Jens and R{\"u}thing, Oliver and Steffen, Bernhard},
  journal={ACM Sigplan Notices},
  volume={29},
  number={6},
  pages={147--158},
  year={1994},
  publisher={ACM New York, NY, USA}
}

@inproceedings{bodik1997partial,
  title={Partial dead code elimination using slicing transformations},
  author={Bodik, Rastislav and Gupta, Rajiv},
  booktitle={Proceedings of the ACM SIGPLAN 1997 conference on Programming language design and implementation},
  pages={159--170},
  year={1997}
}

// Pointer analysis

@inproceedings{lhotak2003scaling,
  title={Scaling Java points-to analysis using Spark},
  author={Lhot{\'a}k, Ond{\v{r}}ej and Hendren, Laurie},
  booktitle={International conference on compiler construction},
  pages={153--169},
  year={2003},
  organization={Springer}
}


